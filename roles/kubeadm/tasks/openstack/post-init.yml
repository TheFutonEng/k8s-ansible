---

- block:
    - name: Ensure manifests directory exists
      file:
        path: /root/manifests
        state: directory

    - name: Install Cinder storage class manifest
      template:
        src: templates/openstack/cinder-storageclass.yaml
        dest: /root/manifests/openstack-cinder-storageclass.yaml

    - name: Install Cinder storage class
      command: kubectl apply -f /root/manifests/openstack-cinder-storageclass.yaml

    - name: Create TLS keypair for k8s-keystone-auth
      command: >
        openssl req -x509 -new -nodes -days 3650
          -subj "/CN=k8s-keystone-auth"
          -keyout /etc/kubernetes/pki/k8s-keystone-auth.key
          -out /etc/kubernetes/pki/k8s-keystone-auth.crt
      args:
        creates: /etc/kubernetes/pki/k8s-keystone-auth.crt

    - name: Create Kubernetes secret for TLS keypair
      shell: |
        set -eo pipefail
        kubectl -n kube-system create secret generic k8s-keystone-auth-tls  \
          --from-file=tls.crt=/etc/kubernetes/pki/k8s-keystone-auth.crt  \
          --from-file=tls.key=/etc/kubernetes/pki/k8s-keystone-auth.key  \
          --dry-run -o yaml |  \
        kubectl apply -f -

    - name: Install k8s-keystone-auth manifest
      template:
        src: templates/openstack/k8s-keystone-auth-deployment.yaml
        dest: /root/manifests/openstack-k8s-keystone-auth-deployment.yaml

    - name: Create/update k8s-keystone-auth deployment
      command: kubectl apply -f /root/manifests/openstack-k8s-keystone-auth-deployment.yaml

    - name: Ensure k8s-keystone-auth rolls out successfully
      command: kubectl -n kube-system rollout status deployment k8s-keystone-auth

    # Kubernetes apiserver doesn't support cluster DNS, so we have to create the file here
    # and patch the running API server
    - name: Get cluster IP for k8s-keystone-auth
      command: kubectl -n kube-system get svc k8s-keystone-auth -o jsonpath='{.spec.clusterIP}'
      register: k8s_keystone_auth_cluster_ip_cmd

    - name: Set k8s-keystone-auth cluster IP fact
      set_fact:
        k8s_keystone_auth_cluster_ip: "{{ k8s_keystone_auth_cluster_ip_cmd.stdout }}"

    - name: Install k8s-keystone-auth webhook configuration
      template:
        src: templates/openstack/k8s-keystone-auth-webhook-config.yaml
        dest: /etc/kubernetes/k8s-keystone-auth-webhook-config.yaml

    - name: Patch apiserver pod manifest
      shell:
        set -eo pipefail
        if ! grep "authentication-token-webhook-config-file" /etc/kubernetes/manifests/kube-apiserver.yaml; then
          cat /etc/kubernetes/manifests/kube-apiserver.yaml
        fi

    - name: Wait for apiserver to restart
      command: kubectl version --request-timeout=1s
      register: api_server_available
      until: api_server_available is succeeded
      retries: 60
      delay: 5
  when: kube_role == "master"
