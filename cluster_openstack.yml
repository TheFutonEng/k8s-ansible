---
#####
## Playbook that provisions and then configures a Kubernetes
## cluster on OpenStack
#####

# Setting this in a separate play is the only way to avoid a recursive templating error
- import_playbook: cluster_variables.yml
  when: cluster_state_k8s | lower == 'present'

# Provision a separate stack for the bastion
- hosts: openstack
  roles:
    - role: jasmin.cluster-infra
      vars:
        cluster_name: "{{ cluster_name_bastion }}"
        cluster_groups:
          - "{{ bastion_group }}"
      when: cluster_state_k8s | lower == 'present'

# Provision the cluster infrastructure
- hosts: openstack
  roles:
    - role: jasmin.cluster-infra
      vars:
        cluster_state: "{{ cluster_state_k8s }}"
        cluster_name: "{{ cluster_name_k8s }}"
        cluster_groups:
          - "{{ masters_group }}"
          - "{{ workers_group }}"

# Do the configuration
- import_playbook: cluster_configure.yml
  vars:
    cluster_name: "{{ cluster_name_k8s }}"
    cloud_provider: openstack
    openstack_trust_id: "{{ hostvars['localhost']['openstack_trust_id'] }}"
    openstack_user_id: "{{ hostvars['localhost']['openstack_user_id'] }}"
    openstack_project_id: "{{ hostvars['localhost']['openstack_project_id'] }}"
  when: cluster_state_k8s | lower == 'present'

# Delete the bastion
- hosts: openstack
  roles:
    - role: jasmin.cluster-infra
      vars:
        cluster_name: "{{ cluster_name_bastion }}"
        cluster_groups:
          - "{{ bastion_group }}"
        cluster_state: absent
