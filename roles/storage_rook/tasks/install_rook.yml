---

- name: Install Rook Helm repository
  command: helm repo add rook https://charts.rook.io/master

- name: Update Helm repositories
  command: helm repo update

- name: Get rook version
  shell: |
    set -euxo pipefail
    helm search rook-ceph | tail -n 1 | awk '{ print $2; }'
  register: rook_version_cmd
  when: rook_version is not defined

- name: Set rook_version fact
  set_fact:
    rook_version: "{{ rook_version_cmd.stdout }}"
  when: rook_version is not defined

- name: Ensure helm values directory exists
  file:
    path: /root/helm/storage_rook
    state: directory

- name: Copy helm values to host
  copy:
    src: files/helm-values.yaml
    dest: /root/helm/storage_rook/values.yaml

- name: Install/upgrade rook operator
  command: >
    helm upgrade rook-ceph-operator rook/rook-ceph
      --install
      --version {{ rook_version }}
      --namespace rook-system
      --values /root/helm/storage_rook/values.yaml

- name: Ensure rook operator has started
  command: kubectl -n rook-system rollout status deployment rook-ceph-operator

- name: Ensure rook daemonsets have started
  shell: |
    # Loop until the daemonset exists
    until kubectl -n rook-system get daemonset {{ item }}
    do
      sleep 1
    done
    # Then wait for the daemonset to roll out
    kubectl -n rook-system rollout status daemonset {{ item }}
  with_items:
    - rook-ceph-agent
    - rook-discover

- name: Ensure manifests directory exists
  file:
    path: /root/manifests/storage_rook

- name: Copy cluster manifests
  copy:
    src: files/{{ item }}
    dest: /root/manifests/storage_rook/{{ item }}
  with_items:
    - cluster.yaml
    - storageclass.yaml

- name: Create cluster resource
  command: kubectl apply -f /root/manifests/storage_rook/cluster.yaml

- name: Wait for cluster pods to become ready
  shell: |
    set -o pipefail
    # Wait until there is at least one pod with the correct label
    until kubectl -n rook-ceph get pod -l app={{ item }} -o json | jq -e '.items|length > 0'
    do
      sleep 1
    done
    # Then wait for them to go into the ready state
    kubectl -n rook-ceph wait --for condition=ready pod -l app={{ item }} --timeout -1s
  with_items:
    - rook-ceph-mgr
    - rook-ceph-mon
    - rook-ceph-osd

- name: Install storage class
  command: kubectl apply -f /root/manifests/storage_rook/storageclass.yaml
