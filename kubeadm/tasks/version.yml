---
#####
## These tasks decide what version of Kubernetes to try and install
##
## Kubernetes releases follow SemVer, i.e. releases are <major>.<minor>.<patch>
##
## The kubernetes_version variable should be set to the target minor
## version, e.g. 1.12 or 1.13
##
## For worker nodes, the target version will be the exact version that is
## installed on the master
##
## For the master, the target version is decided using the following logic:
##
##   1. In the following cases, the target version is the latest available
##      version that matches kubernetes_version
##
##        - There is no existing installation
##        - The installed version does not match kubernetes_version
##        - The upgrade_system_packages variable is true
##
##      This means that:
##
##        - New clusters get the latest matching version
##        - If kubernetes_version changes, a minor version upgrade will be
##          performed
##        - If upgrade_system_packages is true, a patch version upgrade
##          will be performed
##
##   2. In all other cases, i.e. kubernetes_version matches the installed version
##      and upgrade_system_packages is false, the target version is the currently
##      installed version (no change)
##
##      This will usually only be the case when installing new worker nodes
#####

- name: Add yum repository for Kubernetes
  yum_repository:
    name: kubernetes
    description: Kubernetes repo
    baseurl: https://packages.cloud.google.com/yum/repos/kubernetes-el7-x86_64
    gpgcheck: yes
    repo_gpgcheck: yes
    gpgkey: >
      https://packages.cloud.google.com/yum/doc/yum-key.gpg
      https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg

- name: Refresh yum package index
  command: yum makecache -y
  args:
    warn: no

- name: Find installed Kubernetes version
  shell: |
    set -eo pipefail
    yum list installed kubelet -q | tail -n -1 | tr -s " " | cut -d " " -f 2 | cut -d "-" -f 1
  changed_when: false
  failed_when: false
  register: kubelet_installed

- name: Set installed Kubernetes version fact
  set_fact:
    kubernetes_version_installed: "{{ kubelet_installed.stdout }}"
  when: kubelet_installed.rc == 0

- debug:
    msg: "Installed Kubernetes version: {{ kubernetes_version_installed | default('none') }}"

- name: Set target Kubernetes version for master
  block:
    - name: Use currently installed version
      set_fact:
        kubernetes_version_target: "{{ kubernetes_version_installed }}"
      when:
        - kubernetes_version_installed is defined
        - kubernetes_version_installed.startswith(kubernetes_version)
        - not (upgrade_system_packages | bool)

    - name: Use latest matching Kubernetes version
      block:
        - debug:
            msg: "Requested Kubernetes version: {{ kubernetes_version }}"

        # Find the latest available Kubernetes version that conforms to the requested version
        - name: Find matching Kubernetes version
          shell: |
            set -eo pipefail
            yum list available kubelet-{{ kubernetes_version }}* --showduplicates -q | \
              tail -n -1 | tr -s " " | cut -d " " -f 2 | cut -d "-" -f 1
          changed_when: false
          register: kubelet_available

        - set_fact:
            kubernetes_version_target: "{{ kubelet_available.stdout }}"
      # Execute this block if the previous task didn't set the target version
      when: kubernetes_version_target is not defined
  when: kube_role == "master"

- name: Set target Kubernetes version for workers
  set_fact:
    kubernetes_version_target: "{{ hostvars[kube_master_inventory_hostname].kubernetes_version_target }}"
  when: kube_role == "worker"

- debug:
    msg: "Target Kubernetes version: {{ kubernetes_version_target }}"
