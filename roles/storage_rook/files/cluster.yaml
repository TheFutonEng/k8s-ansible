apiVersion: v1
kind: Namespace
metadata:
  name: rook-ceph
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: rook-ceph-cluster
  namespace: rook-ceph
---
# Allow the operator to create resources in the cluster namespace
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: RoleBinding
metadata:
  name: rook-ceph-cluster-mgmt
  namespace: rook-ceph
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: rook-ceph-cluster-mgmt
subjects:
  - kind: ServiceAccount
    name: rook-ceph-system
    namespace: rook-system
---
# Allow the pods in this namespace to work with configmaps
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: Role
metadata:
  name: rook-ceph-cluster
  namespace: rook-ceph
rules:
  - apiGroups: [""]
    resources: ["configmaps"]
    verbs: [ "get", "list", "watch", "create", "update", "delete" ]
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: RoleBinding
metadata:
  name: rook-ceph-cluster
  namespace: rook-ceph
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: rook-ceph-cluster
subjects:
  - kind: ServiceAccount
    name: rook-ceph-cluster
    namespace: rook-ceph
---
# Create the cluster on the labelled nodes
apiVersion: ceph.rook.io/v1beta1
kind: Cluster
metadata:
  name: rook-ceph
  namespace: rook-ceph
spec:
  # The path on the host where configuration files will be persisted
  dataDirHostPath: /var/lib/rook
  # The service account under which to run the daemon pods in this cluster
  serviceAccount: rook-ceph-cluster
  # Monitor configuration
  mon:
    count: 3
    allowMultiplePerNode: true
  # Enable the Ceph dashboard
  dashboard:
    enabled: true
  # No host network
  network:
    hostNetwork: false
  # Place pods on nodes labelled for storage
  placement:
    all:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
            - matchExpressions:
                - key: role
                  operator: In
                  values: [infrastructure]
      tolerations:
        - key: role
          operator: Equal
          value: infrastructure
          effect: NoSchedule
  resources:
# The requests and limits set here, allow the mgr pod to use half of one CPU core and 1 gigabyte of memory
#    mgr:
#      limits:
#        cpu: "500m"
#        memory: "1024Mi"
#      requests:
#        cpu: "500m"
#        memory: "1024Mi"
# The above example requests/limits can also be added to the mon and osd components
#    mon:
#    osd:
  storage:
    useAllNodes: true
    useAllDevices: false
    deviceFilter:
    location:
    config:
      databaseSizeMB: "1024"
      journalSizeMB: "1024"
