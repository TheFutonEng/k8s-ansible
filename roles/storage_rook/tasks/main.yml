---

- name: Install Ceph libraries (Ubuntu)
  apt: name={{ item }} state=latest
  with_items:
    - ceph-common
    - ceph-fs-common
  when: ansible_distribution == 'Ubuntu'

- name: Install Ceph libraries (CentOS)
  yum: name=ceph state=latest
  when: ansible_distribution == 'CentOS'

- name: Ensure manifests directory exists
  file:
    path: /root/manifests
    state: directory
  when: inventory_hostname in groups['kube_masters']

- name: Install rook manifests
  template: src={{ item }} dest=/root/manifests/ mode="u=rw,g=,o="
  with_items:
    - rook-operator.yml
    - rook-cluster.yml
    - rook-storageclass.yml
  when: inventory_hostname in groups['kube_masters']

- name: Ensure rook namespace exists
  shell: kubectl create namespace rook
  register: result
  changed_when: result.rc == 0
  failed_when: result.rc != 0 and 'AlreadyExists' not in result.stderr
  when: inventory_hostname in groups['kube_masters']

- name: Install rook operator
  shell: kubectl apply -f /root/manifests/rook-operator.yml --force
  when: inventory_hostname in groups['kube_masters']

- name: Wait for rook cluster resource to become available
  shell: kubectl get clusters
  register: result
  until: result.rc == 0
  retries: 30
  delay: 10
  when: inventory_hostname in groups['kube_masters']

- name: Create rook cluster
  shell: kubectl apply -f /root/manifests/rook-cluster.yml --force
  when: inventory_hostname in groups['kube_masters']

- name: Ensure rook cluster has started (api/mgr deployments and mon replicasets)
  shell: >
    kubectl -n rook get {{ item.type }} -l {{ item.selector }} -o json |
      jq '(.items|length > 0) and (.items|map(.status.replicas == .status.availableReplicas)|all)'
  with_items:
    - { type: deployment, selector: "app=rook-api" }
    - { type: deployment, selector: "app=rook-ceph-mgr" }
    - { type: replicaset, selector: "app=rook-ceph-mon" }
  register: result
  until: result.stdout == "true"
  retries: 30
  delay: 10
  when: inventory_hostname in groups['kube_masters']

- name: Ensure rook cluster has started (osd daemonset)
  shell: >
    kubectl -n rook get daemonset -l app=rook-ceph-osd -o json |
      jq '(.items|length > 0) and (.items|map(.status.desiredNumberScheduled == .status.numberAvailable)|all)'
  register: result
  until: result.stdout == "true"
  retries: 30
  delay: 10
  when: inventory_hostname in groups['kube_masters']

- name: Create default storage class using rook
  shell: kubectl apply -f /root/manifests/rook-storageclass.yml --force
  when: inventory_hostname in groups['kube_masters']
